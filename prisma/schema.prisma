generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(cuid())
  email      String
  provider   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt
  numOfRuns  Int        @default(0)
  categories Category[]
  snippets   Snippet[]
  solutions  Solution[]

  @@unique([email, provider])
}

model Problem {
  id              String     @id
  title           String
  descriptionHtml String
  inputHtml       String
  outputHtml      String
  limitHtml       String?
  associations    Int[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  examples        Example[]
  solutions       Solution[]
}

model Example {
  id        String   @id @default(cuid())
  number    Int      @default(0)
  input     String
  output    String
  explain   String?
  problemId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  problem   Problem  @relation(fields: [problemId], references: [id], onDelete: Cascade)
}

model Solution {
  id         String   @id @default(cuid())
  code       String
  language   String
  difficulty String
  revisit    Boolean  @default(true)
  userId     String
  problemId  String
  categoryId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  category   Category @relation(fields: [categoryId], references: [id])
  problem    Problem  @relation(fields: [problemId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, problemId])
}

model Category {
  id        String     @id @default(cuid())
  name      String
  userId    String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  solutions Solution[]

  @@unique([userId, name])
}

model Snippet {
  id        String   @id @default(cuid())
  name      String
  language  String
  code      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, name])
}
